name: Build, test and package

on: push

env:
  MSSQL_SA_PASSWORD: "YourStrong!Passw0rd"
  ACCEPT_EULA: "Y"
  MSSQL_PID: "developer"
  
jobs:
  package:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/checkout@v3
        with:
          repository: HicServices/RDMP
          ref: feature/rc4
          path: RDMP
      - uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 6.0.x
      - name: Get version
        id: version
        shell: cmd
        run: |
          for /f tokens^=1^,2^ delims^=^" %%i in (SharedAssemblyInfo.cs) do @if "%%i"=="[assembly: AssemblyVersion(" echo version=%%j>> %GITHUB_OUTPUT%
      - name: Install MS SQL 2019
        uses: crazy-max/ghaction-chocolatey@v2
        with:
          args: install -ry sqllocaldb wget
      - name: Set up database
        run: |
          SqlLocalDB.exe create MSSQLLocalDB -s
          sqlcmd -l 180 -S "(localdb)\MSSQLLocalDB" -Q "SELECT @@VERSION;"
          dotnet run --project RDMP\Tools\rdmp\rdmp.csproj -c Release -- install --createdatabasetimeout 180  "(localdb)\MSSQLLocalDB" TEST_
      - name: Test
        run: |
          dotnet test -c Release
      - name: Build
        shell: bash
        run: |
          wget https://raw.githubusercontent.com/SMI/DicomTypeTranslation/main/Templates/CT.it
          dotnet publish Rdmp.Dicom/Rdmp.Dicom.csproj -o p/core -c Release --self-contained false -nologo
          dotnet publish Rdmp.Dicom.UI/Rdmp.Dicom.UI.csproj -o p/win -c Release --self-contained false -nologo
          7z a -tzip Rdmp.Dicom.${{ steps.version.outputs.version }}.nupkg Rdmp.Dicom.nuspec p
          dotnet pack Rdmp.Dicom/Rdmp.Dicom.csproj -c Release -p:Version=${{ steps.version.outputs.version }} --include-source --include-symbols -o .
          
          dotnet run --project RDMP\\Tools\\rdmp\\rdmp.csproj -c Release -- --dir yaml -f <<-EOC
          pack -p --file Rdmp.Dicom.${{ steps.version.outputs.version }}.nupkg
          cmd listsupportedcommands
          cmd describe CreateNewImagingDatasetSuite

          cmd NewObject ConnectionStringKeyword MicrosoftSqlServer TrustServerCertificate yes
          cmd NewObject ConnectionStringKeyword MicrosoftSqlServer Encrypt yes
          cmd CreateNewImagingDatasetSuite "DatabaseType:MicrosoftSqlServer:Name:ImagingTest:Server=(localdb)\MSSQLLocalDB;Integrated Security=true;Encrypt=yes;TrustServerCertificate=true" ./data DicomFileCollectionSource CT_ ../CT.it false true
          cmd AddTag Catalogue:CT_ImageTable StudyDate null
          cmd AddTag Catalogue:CT_*Table SeriesDate null
          cmd AddTag Catalogue:CT_*Table SeriesDate null
          cmd AddTag Catalogue:CT_*Table SeriesDate null          
          cmd CreateNewImagingDatasetSuite "DatabaseType:MicrosoftSqlServer:Name:ImagingTest2:Server=(localdb)\MSSQLLocalDB;Integrated Security=true;Encrypt=yes;TrustServerCertificate=true" ./data DicomFileCollectionSource CT_ ../CT.it false true
          EOC
      - name: Nuget push
        if: contains(github.ref,'refs/tags/')
        run: dotnet nuget push HIC.Rdmp.Dicom.*.nupkg -k ${{ secrets.NUGET_KEY }} --skip-duplicate --source https://api.nuget.org/v3/index.json
      - name: Store created nupkg files
        uses: actions/upload-artifact@v3
        with:
          path: ./*.nupkg
          retention-days: 1
      - name: Upload release binaries
        if: contains(github.ref,'refs/tags/')
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ github.ref }}
          file: 'Rdmp.Dicom.${{ steps.version.outputs.version }}.nupkg'
    
